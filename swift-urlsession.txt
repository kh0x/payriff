import Foundation
#if canImport(FoundationNetworking)
import FoundationNetworking
#endif

var semaphore = DispatchSemaphore (value: 0)

let parameters = "{\n  \"body\": {\n    \"approveURL\": \"https://payriff.com/success.html\",\n    \"cancelURL\": \"https://payriff.com/cancel.html\",\n    \"declineURL\": \"https://payriff.com/decline.html\",\n    \"amount\": 1.00,\n    \"currencyType\": \"AZN\",\n    \"description\": \"Payment description text\",\n    \"language\": \"AZ\"\n  },\n  \"encryptionToken\": \"randomEncryptionTokenTest123\",\n  \"merchant\": \"ES1000010\"\n}"
let postData = parameters.data(using: .utf8)

var request = URLRequest(url: URL(string: "https://api.payriff.com/api/v1/createOrder")!,timeoutInterval: Double.infinity)
request.addValue("00e1af0fcb96300193a75250cdac8339053c26ba", forHTTPHeaderField: "Authorization")
request.addValue("application/json", forHTTPHeaderField: "Content-Type")

request.httpMethod = "POST"
request.httpBody = postData

let task = URLSession.shared.dataTask(with: request) { data, response, error in 
  guard let data = data else {
    print(String(describing: error))
    semaphore.signal()
    return
  }
  print(String(data: data, encoding: .utf8)!)
  semaphore.signal()
}

task.resume()
semaphore.wait()

